services:
  # PostgreSQL for Backend
  postgres-backend:
    image: postgres:15
    environment:
      POSTGRES_DB: agentbooks
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_backend_data:/var/lib/postgresql/data
    networks:
      - agentbooks-network



  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agentbooks-network
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-backend:5432/agentbooks
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=web
      - WAIT_FOR_DB=true
      - WAIT_FOR_REDIS=true
    depends_on:
      - postgres-backend
      - redis
    volumes:
      - ./backend:/app
    networks:
      - agentbooks-network

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-backend:5432/agentbooks
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=worker
      - WAIT_FOR_DB=true
      - WAIT_FOR_REDIS=true
    depends_on:
      - postgres-backend
      - redis
      - backend
    volumes:
      - ./backend:/app
    networks:
      - agentbooks-network

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-backend:5432/agentbooks
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=beat
      - WAIT_FOR_DB=false
      - WAIT_FOR_REDIS=true
    depends_on:
      - postgres-backend
      - redis
      - backend
    volumes:
      - ./backend:/app
    networks:
      - agentbooks-network

  # Flower (Celery Monitoring)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-backend:5432/agentbooks
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SERVICE_TYPE=flower
      - WAIT_FOR_DB=false
      - WAIT_FOR_REDIS=true
    depends_on:
      - redis
      - celery-worker
    volumes:
      - ./backend:/app
    networks:
      - agentbooks-network

  # Database Seeder (runs once to populate sample data)
  db-seeder:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-backend:5432/agentbooks
      - SERVICE_TYPE=seeder
      - WAIT_FOR_DB=true
      - WAIT_FOR_REDIS=false
    depends_on:
      - postgres-backend
      - backend
    volumes:
      - ./backend:/app
    restart: "no"
    networks:
      - agentbooks-network

  # Auth Portal
  auth-portal:
    build:
      context: ./frontends/auth-portal
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://backend:8000
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./frontends/auth-portal:/app
      - /app/node_modules
    networks:
      - agentbooks-network

  # Client Portal
  client-portal:
    build:
      context: ./frontends/client-portal
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://backend:8000
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./frontends/client-portal:/app
      - /app/node_modules
    networks:
      - agentbooks-network

  # Practice Portal
  practice-portal:
    build:
      context: ./frontends/practice-portal
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://backend:8000
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3002
    depends_on:
      - backend
    volumes:
      - ./frontends/practice-portal:/app
      - /app/node_modules
    networks:
      - agentbooks-network



  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@agentbooks.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres-backend
    networks:
      - agentbooks-network

volumes:
  postgres_backend_data:
  pgadmin_data:
  redis_data:

networks:
  agentbooks-network:
    driver: bridge 